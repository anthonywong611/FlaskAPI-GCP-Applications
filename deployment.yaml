apiVersion: apps/v1
kind: Deployment  
metadata:
  name: cloudsql-from-gke
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: flask-app 
  template:
    metadata:
      labels:
        app: flask-app 
    spec:
      # 1. For running the application
      containers:
      - name: flask-app
        # TODO: Replace these values
        image: northamerica-northeast2-a-docker.pkg.dev/data-at-anz-350321/flask-repo/flask-app:latest 
        # image: <ZONE>-docker.pkg.dev/<PROJECT_ID>/flask-repo/flask-app:latest  
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: INSTANCE_HOST
          value: "127.0.0.1"
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-secret  
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: db-secret  
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: db-secret  
              key: database
      # 2. For running the Cloud SQL Auth proxy alongside the application
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:latest 
        command:
          - "/cloud_sql_proxy"
          - "-instances=data-at-anz-350321:northamerica-northeast2:sql-dev-fc536648=tcp:5432"  # TODO: Replace these values
          # - "-instances=<PROJECT_ID>:<REGION>:<INSTANCE_NAME>=tcp:5432"  
          - "-credential_file=/secrets/service_account.json"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        volumeMounts:
        - name: sa-volume
          mountPath: /secrets/
          readOnly: true
      volumes:
      - name: sa-volume
        secret:
          secretName: sa-secret
